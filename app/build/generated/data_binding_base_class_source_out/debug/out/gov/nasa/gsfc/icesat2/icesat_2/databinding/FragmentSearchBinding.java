// Generated by view binder compiler. Do not edit!
package gov.nasa.gsfc.icesat2.icesat_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import gov.nasa.gsfc.icesat2.icesat_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-h500dp-v21/</li>
   *   <li>layout-h550dp-v21/</li>
   *   <li>layout-h600dp-v21/</li>
   *   <li>layout-h650dp-v21/</li>
   *   <li>layout-h700dp-v21/</li>
   *   <li>layout-h800dp-v21/</li>
   *   <li>layout-v21/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-h400dp-v21/</li>
   * </ul>
   */
  @Nullable
  public final ImageView banner;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final Button btnSelectOnMap;

  @NonNull
  public final Button btnTrack;

  @NonNull
  public final Button btnUseCurrentLoc;

  @NonNull
  public final Button btnUseSearchBar;

  @NonNull
  public final CheckBox checkBoxFuture;

  @NonNull
  public final CheckBox checkBoxPast;

  @NonNull
  public final EditText editTextLat;

  @NonNull
  public final EditText editTextLon;

  @NonNull
  public final EditText editTextRadius;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final CoordinatorLayout searchFragSnackCoordinator;

  @NonNull
  public final ConstraintLayout searchFragment;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v21/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-h400dp-v21/</li>
   *   <li>layout-h500dp-v21/</li>
   *   <li>layout-h550dp-v21/</li>
   *   <li>layout-h600dp-v21/</li>
   *   <li>layout-h650dp-v21/</li>
   *   <li>layout-h700dp-v21/</li>
   *   <li>layout-h800dp-v21/</li>
   * </ul>
   */
  @Nullable
  public final TextView textView;

  @NonNull
  public final TextView textViewAddress;

  @NonNull
  public final TextView textViewAdvancedSearch;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-h400dp-v21/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-h500dp-v21/</li>
   *   <li>layout-h550dp-v21/</li>
   *   <li>layout-h600dp-v21/</li>
   *   <li>layout-h650dp-v21/</li>
   *   <li>layout-h700dp-v21/</li>
   *   <li>layout-h800dp-v21/</li>
   *   <li>layout-v21/</li>
   * </ul>
   */
  @Nullable
  public final TextView textViewBanner2;

  @NonNull
  public final TextView textViewEnterLocation;

  @NonNull
  public final TextView textViewSimpleSearch;

  @NonNull
  public final Spinner unitSpinner;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView, @Nullable ImageView banner,
      @NonNull Button btnSearch, @NonNull Button btnSelectOnMap, @NonNull Button btnTrack,
      @NonNull Button btnUseCurrentLoc, @NonNull Button btnUseSearchBar,
      @NonNull CheckBox checkBoxFuture, @NonNull CheckBox checkBoxPast,
      @NonNull EditText editTextLat, @NonNull EditText editTextLon,
      @NonNull EditText editTextRadius, @NonNull Guideline guideline,
      @NonNull CoordinatorLayout searchFragSnackCoordinator,
      @NonNull ConstraintLayout searchFragment, @Nullable TextView textView,
      @NonNull TextView textViewAddress, @NonNull TextView textViewAdvancedSearch,
      @Nullable TextView textViewBanner2, @NonNull TextView textViewEnterLocation,
      @NonNull TextView textViewSimpleSearch, @NonNull Spinner unitSpinner) {
    this.rootView = rootView;
    this.banner = banner;
    this.btnSearch = btnSearch;
    this.btnSelectOnMap = btnSelectOnMap;
    this.btnTrack = btnTrack;
    this.btnUseCurrentLoc = btnUseCurrentLoc;
    this.btnUseSearchBar = btnUseSearchBar;
    this.checkBoxFuture = checkBoxFuture;
    this.checkBoxPast = checkBoxPast;
    this.editTextLat = editTextLat;
    this.editTextLon = editTextLon;
    this.editTextRadius = editTextRadius;
    this.guideline = guideline;
    this.searchFragSnackCoordinator = searchFragSnackCoordinator;
    this.searchFragment = searchFragment;
    this.textView = textView;
    this.textViewAddress = textViewAddress;
    this.textViewAdvancedSearch = textViewAdvancedSearch;
    this.textViewBanner2 = textViewBanner2;
    this.textViewEnterLocation = textViewEnterLocation;
    this.textViewSimpleSearch = textViewSimpleSearch;
    this.unitSpinner = unitSpinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.banner;
      ImageView banner = ViewBindings.findChildViewById(rootView, id);

      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.btnSelectOnMap;
      Button btnSelectOnMap = ViewBindings.findChildViewById(rootView, id);
      if (btnSelectOnMap == null) {
        break missingId;
      }

      id = R.id.btnTrack;
      Button btnTrack = ViewBindings.findChildViewById(rootView, id);
      if (btnTrack == null) {
        break missingId;
      }

      id = R.id.btnUseCurrentLoc;
      Button btnUseCurrentLoc = ViewBindings.findChildViewById(rootView, id);
      if (btnUseCurrentLoc == null) {
        break missingId;
      }

      id = R.id.btnUseSearchBar;
      Button btnUseSearchBar = ViewBindings.findChildViewById(rootView, id);
      if (btnUseSearchBar == null) {
        break missingId;
      }

      id = R.id.checkBoxFuture;
      CheckBox checkBoxFuture = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxFuture == null) {
        break missingId;
      }

      id = R.id.checkBoxPast;
      CheckBox checkBoxPast = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPast == null) {
        break missingId;
      }

      id = R.id.editTextLat;
      EditText editTextLat = ViewBindings.findChildViewById(rootView, id);
      if (editTextLat == null) {
        break missingId;
      }

      id = R.id.editTextLon;
      EditText editTextLon = ViewBindings.findChildViewById(rootView, id);
      if (editTextLon == null) {
        break missingId;
      }

      id = R.id.editTextRadius;
      EditText editTextRadius = ViewBindings.findChildViewById(rootView, id);
      if (editTextRadius == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.searchFragSnackCoordinator;
      CoordinatorLayout searchFragSnackCoordinator = ViewBindings.findChildViewById(rootView, id);
      if (searchFragSnackCoordinator == null) {
        break missingId;
      }

      ConstraintLayout searchFragment = (ConstraintLayout) rootView;

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textViewAddress;
      TextView textViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddress == null) {
        break missingId;
      }

      id = R.id.textViewAdvancedSearch;
      TextView textViewAdvancedSearch = ViewBindings.findChildViewById(rootView, id);
      if (textViewAdvancedSearch == null) {
        break missingId;
      }

      id = R.id.textViewBanner2;
      TextView textViewBanner2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.textViewEnterLocation;
      TextView textViewEnterLocation = ViewBindings.findChildViewById(rootView, id);
      if (textViewEnterLocation == null) {
        break missingId;
      }

      id = R.id.textViewSimpleSearch;
      TextView textViewSimpleSearch = ViewBindings.findChildViewById(rootView, id);
      if (textViewSimpleSearch == null) {
        break missingId;
      }

      id = R.id.unitSpinner;
      Spinner unitSpinner = ViewBindings.findChildViewById(rootView, id);
      if (unitSpinner == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, banner, btnSearch,
          btnSelectOnMap, btnTrack, btnUseCurrentLoc, btnUseSearchBar, checkBoxFuture, checkBoxPast,
          editTextLat, editTextLon, editTextRadius, guideline, searchFragSnackCoordinator,
          searchFragment, textView, textViewAddress, textViewAdvancedSearch, textViewBanner2,
          textViewEnterLocation, textViewSimpleSearch, unitSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
