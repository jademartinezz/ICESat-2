// Generated by view binder compiler. Do not edit!
package gov.nasa.gsfc.icesat2.icesat_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import gov.nasa.gsfc.icesat2.icesat_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSelectOnMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final FragmentContainerView mapSelector;

  @NonNull
  public final SeekBar seekBar;

  @NonNull
  public final TextView textViewDropPin;

  private FragmentSelectOnMapBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSearch,
      @NonNull FragmentContainerView mapSelector, @NonNull SeekBar seekBar,
      @NonNull TextView textViewDropPin) {
    this.rootView = rootView;
    this.btnSearch = btnSearch;
    this.mapSelector = mapSelector;
    this.seekBar = seekBar;
    this.textViewDropPin = textViewDropPin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSelectOnMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSelectOnMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_select_on_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSelectOnMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.mapSelector;
      FragmentContainerView mapSelector = ViewBindings.findChildViewById(rootView, id);
      if (mapSelector == null) {
        break missingId;
      }

      id = R.id.seekBar;
      SeekBar seekBar = ViewBindings.findChildViewById(rootView, id);
      if (seekBar == null) {
        break missingId;
      }

      id = R.id.textViewDropPin;
      TextView textViewDropPin = ViewBindings.findChildViewById(rootView, id);
      if (textViewDropPin == null) {
        break missingId;
      }

      return new FragmentSelectOnMapBinding((ConstraintLayout) rootView, btnSearch, mapSelector,
          seekBar, textViewDropPin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
