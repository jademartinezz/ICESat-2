// Generated by view binder compiler. Do not edit!
package gov.nasa.gsfc.icesat2.icesat_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import gov.nasa.gsfc.icesat2.icesat_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox checkBoxLasers;

  @NonNull
  public final CheckBox checkBoxMarker;

  @NonNull
  public final CheckBox checkBoxPath;

  @NonNull
  public final ConstraintLayout constraintLayoutPastFuture;

  @NonNull
  public final ImageView imageViewFuture;

  @NonNull
  public final ImageView imageViewPast;

  @NonNull
  public final FragmentContainerView map;

  @NonNull
  public final ConstraintLayout mapFragmentConstraintLayout;

  @NonNull
  public final FrameLayout mapFragmentContainer;

  @NonNull
  public final TextView textViewFuture;

  @NonNull
  public final TextView textViewPast;

  @NonNull
  public final TextView textViewPastFuture;

  @NonNull
  public final TextView textViewSeeAll;

  private FragmentMapBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox checkBoxLasers,
      @NonNull CheckBox checkBoxMarker, @NonNull CheckBox checkBoxPath,
      @NonNull ConstraintLayout constraintLayoutPastFuture, @NonNull ImageView imageViewFuture,
      @NonNull ImageView imageViewPast, @NonNull FragmentContainerView map,
      @NonNull ConstraintLayout mapFragmentConstraintLayout,
      @NonNull FrameLayout mapFragmentContainer, @NonNull TextView textViewFuture,
      @NonNull TextView textViewPast, @NonNull TextView textViewPastFuture,
      @NonNull TextView textViewSeeAll) {
    this.rootView = rootView;
    this.checkBoxLasers = checkBoxLasers;
    this.checkBoxMarker = checkBoxMarker;
    this.checkBoxPath = checkBoxPath;
    this.constraintLayoutPastFuture = constraintLayoutPastFuture;
    this.imageViewFuture = imageViewFuture;
    this.imageViewPast = imageViewPast;
    this.map = map;
    this.mapFragmentConstraintLayout = mapFragmentConstraintLayout;
    this.mapFragmentContainer = mapFragmentContainer;
    this.textViewFuture = textViewFuture;
    this.textViewPast = textViewPast;
    this.textViewPastFuture = textViewPastFuture;
    this.textViewSeeAll = textViewSeeAll;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBoxLasers;
      CheckBox checkBoxLasers = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxLasers == null) {
        break missingId;
      }

      id = R.id.checkBoxMarker;
      CheckBox checkBoxMarker = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxMarker == null) {
        break missingId;
      }

      id = R.id.checkBoxPath;
      CheckBox checkBoxPath = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxPath == null) {
        break missingId;
      }

      id = R.id.constraintLayoutPastFuture;
      ConstraintLayout constraintLayoutPastFuture = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutPastFuture == null) {
        break missingId;
      }

      id = R.id.imageViewFuture;
      ImageView imageViewFuture = ViewBindings.findChildViewById(rootView, id);
      if (imageViewFuture == null) {
        break missingId;
      }

      id = R.id.imageViewPast;
      ImageView imageViewPast = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPast == null) {
        break missingId;
      }

      id = R.id.map;
      FragmentContainerView map = ViewBindings.findChildViewById(rootView, id);
      if (map == null) {
        break missingId;
      }

      ConstraintLayout mapFragmentConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.mapFragmentContainer;
      FrameLayout mapFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (mapFragmentContainer == null) {
        break missingId;
      }

      id = R.id.textViewFuture;
      TextView textViewFuture = ViewBindings.findChildViewById(rootView, id);
      if (textViewFuture == null) {
        break missingId;
      }

      id = R.id.textViewPast;
      TextView textViewPast = ViewBindings.findChildViewById(rootView, id);
      if (textViewPast == null) {
        break missingId;
      }

      id = R.id.textViewPastFuture;
      TextView textViewPastFuture = ViewBindings.findChildViewById(rootView, id);
      if (textViewPastFuture == null) {
        break missingId;
      }

      id = R.id.textViewSeeAll;
      TextView textViewSeeAll = ViewBindings.findChildViewById(rootView, id);
      if (textViewSeeAll == null) {
        break missingId;
      }

      return new FragmentMapBinding((ConstraintLayout) rootView, checkBoxLasers, checkBoxMarker,
          checkBoxPath, constraintLayoutPastFuture, imageViewFuture, imageViewPast, map,
          mapFragmentConstraintLayout, mapFragmentContainer, textViewFuture, textViewPast,
          textViewPastFuture, textViewSeeAll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
